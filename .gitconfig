[alias]
	# View the SHA, description, and history graph
	#l = log --graph --pretty "%C(yellow)%h%C(cyan)%x20%Creset%aE%x20%x28%ar%x29%n%C(white)%s%n"
	l = log --graph --all --pretty=format:"'%C(yellow)%h %C(blue)%s%C(auto)%w(0,0,7)%+d%n %an(%ar)%n'"

	# Shorten status
	s = status

	# Shorten commit
	c = commit

	# Pull in remote changes for the current repository and all its submodules
	p = !"git pull; git submodule foreach git pull origin master"

	# Diff
	d = difftool

	# Undo a `git push`
	undopush = push -f origin HEAD^:master

	# Show verbose output about tags, branches or remotes
	tags = tag -l
	branches = branch -a
	remotes = remote -v

[apply]
	# Detect whitespace errors when applying a patch
	# whitespace = fix

[core]
	# Use custom `.gitignore` and `.gitattributes`
	excludesfile = ~/.gitignore
	attributesfile = ~/.gitattributes
	editor = vim

	# Treat spaces before tabs, lines that are indented with 8 or more spaces, and all kinds of trailing whitespace as an error
	# whitespace = space-before-tab,indent-with-non-tab,trailing-space

[color]
	# Use colors in Git commands that are capable of colored output when outputting to the terminal
	ui = auto
	editor = subl -w

[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green

[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold

[color "status"]
	added = yellow
	changed = green
	untracked = cyan

[branch "master"]
	# Use `origin` as the default remote on the `master` branch in all cases
	remote = origin
	merge = refs/heads/master
[user]
	email = hello@kristian.co
	name = Kristian Andersen
	username = ksmandersen
[push]
	default = matching
[filter "media"]
	clean = git-media-clean %f
	smudge = git-media-smudge %f
[difftool "Kaleidoscope"]
	cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"
[mergetool "Kaleidoscope"]
	cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" \"$REMOTE\"
[mergetool]
	keepBackup = true
[credential]
	helper = osxkeychain
[hub]
	protocol = git
